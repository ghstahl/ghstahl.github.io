!function(e){function __webpack_require__(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,__webpack_require__),r.l=!0,r.exports}var t={};__webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.i=function(e){return e},__webpack_require__.d=function(e,t,o){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=7)}([function(e,t){e.exports=riot},function(e,t,o){"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function RouteContributionStore(){_classCallCheck(this,RouteContributionStore);var e=this;e.name="RouteContributionStore",e._initializeViewSet()}return RouteContributionStore.prototype._initializeViewSet=function(){var e=this;e._viewsSet=new Set;var t=e._viewsSet;t.add("home"),t.add("my-component-page"),t.add("typicode-user-detail"),e.views=Array.from(t),e.defaultRoute="/my-component-page/home"},RouteContributionStore.prototype.uninitialize=function(){},RouteContributionStore.prototype.initialize=function(){var e=this;riot.observable(e),e.on(riot.EVT.router.out.contributeRoutes,function(t){console.log(e.name,riot.EVT.router.out.contributeRoutes,t),t("/my-component-page/typicode-user-detail?id=*",function(){console.log("route handler of /my-component-page/typicode-user-detail"),riot.control.trigger(riot.EVT.routeStore.in.riotRouteLoadView,"mpc-typicode-user-detail")}),t("/my-component-page/*",function(t){console.log("route handler of /my-component-page/"+t);var o=t;-1===e.views.indexOf(o)?riot.control.trigger(riot.EVT.routeStore.in.routeDispatch,e.defaultRoute):riot.control.trigger(riot.EVT.routeStore.in.riotRouteLoadView,"mpc-"+o)}),t("/my-component-page..",function(){console.log("route handler of /my-component-page.."),riot.control.trigger(riot.EVT.routeStore.in.routeDispatch,e.defaultRoute)})})},RouteContributionStore}();t.default=r},function(e,t,o){"use strict";function TypicodeUserStore(){var e=this;e.name="TypicodeUserStore",riot.EVT.typicodeUserStore={in:{typicodeInit:"typicode-init",typicodeUninit:"typicode-uninit",typicodeUsersFetchResult:"typicode-users-fetch-result",typicodeUsersFetch:"typicode-users-fetch",typicodeUserFetch:"typicode-user-fetch"},out:{typicodeUsersChanged:"typicode-users-changed",typicodeUserChanged:"typicode-user-changed"}},e.fetchException=null,e.onTypicodeUsersFetch=function(e){console.log(riot.EVT.typicodeUserStore.in.typicodeUsersFetch);var t={name:riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult};e&&(t.query=e),riot.control.trigger(riot.EVT.fetchStore.in.fetch,"https://jsonplaceholder.typicode.com/users",null,t)},e.onTypicodeUserFetch=function(t){console.log(riot.EVT.typicodeUserStore.in.typicodeUserFetch);var o=JSON.parse(localStorage.getItem(r));if(o){var i=o.filter(function(e){return e.id==t.id});i&&i.length>0&&e.trigger(riot.EVT.typicodeUserStore.out.typicodeUserChanged,i[0])}else{var s={type:"riotControlTrigger",evt:riot.EVT.typicodeUserStore.in.typicodeUserFetch,query:t};riot.control.trigger(riot.EVT.typicodeUserStore.in.typicodeUsersFetch,s)}},e.uninitialize=function(){e.off(riot.EVT.typicodeUserStore.in.typicodeUsersFetch,e.onTypicodeUsersFetch),e.off(riot.EVT.typicodeUserStore.in.typicodeUserFetch,e.onTypicodeUserFetch),e.off(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,e.onUsersResult),riot.EVT.typicodeUserStore=null},e.initialize=function(){riot.observable(e),e.on(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,e.onUsersResult),e.on(riot.EVT.typicodeUserStore.in.typicodeUsersFetch,e.onTypicodeUsersFetch),e.on(riot.EVT.typicodeUserStore.in.typicodeUserFetch,e.onTypicodeUserFetch)},e.resetData=function(){e.fetchException=null},e.onUsersResult=function(t,o){if(console.log(riot.EVT.typicodeUserStore.in.typicodeUsersFetchResult,t,o),null==t.error&&t.response.ok&&t.json){var i=t.json;if(riot.control.trigger(riot.EVT.localStorageStore.in.localstorageSet,{key:r,data:i}),e.trigger(riot.EVT.typicodeUserStore.out.typicodeUsersChanged,i),o.query){var s=o.query;"riotControlTrigger"==s.type&&riot.control.trigger(s.evt,s.query)}}else riot.control.trigger(riot.EVT.localStorageStore.in.localstorageRemove,{key:r}),riot.control.trigger("ErrorStore:error-catch-all",{code:"typeicode-143523"})}}var r="typicodeUserCache";e.exports=TypicodeUserStore},function(e,t,o){"use strict";o(0).tag2("mpc-home",'<div class="panel panel-default"> <div class="panel-heading">My Component</div> <div class="panel-body"> <div class="well"> I am located in a prebuilt bundle.js. I am a full blown SPA as far as I am concerned, as I just had to follow a few rules that the hosting SPA required. </div> </div> </div> <a href="#my-component-page/my-component-page" class="btn btn-default">TypiCode Users</a>',"","",function(e){})},function(e,t,o){"use strict";var r=o(0);r.tag2("mpc-my-component-page",'<div class="panel panel-default"> <div class="panel-heading">TypiCode Users</div> <div class="panel-body"> <div class="well"> This pulls users from https://jsonplaceholder.typicode.com/ </div> <table class="table table-striped table-hover "> <thead> <tr> <th>id</th> <th>username</th> <th>name</th> <th>email</th> <th>phone</th> <th>details</th> </tr> </thead> <tbody> <tr each="{this.results}"> <td>{this.id}</td> <td>{this.username}</td> <td>{this.name}</td> <td>{this.email}</td> <td>{this.phone}</td> <td><a onclick="{parent.route}">More...</a></td> </tr> </tbody> </table> </div> </div>',"","",function(e){var t=this;t.error=!1,t.results=[],t.resetData=function(){t.results=[],t.error=!1},t.on("mount",function(){console.log("typicode-users mount"),r.control.on(r.EVT.typicodeUserStore.out.typicodeUsersChanged,t.onTypicodeUsersChanged),r.control.trigger(r.EVT.typicodeUserStore.in.typicodeUsersFetch)}),t.on("unmount",function(){console.log("typicode-users unmount"),r.control.off(r.EVT.typicodeUserStore.out.typicodeUsersChanged,t.onTypicodeUsersChanged)}),t.onTypicodeUsersChanged=function(e){console.log(r.EVT.typicodeUserStore.out.typicodeUsersChanged),t.results=e,console.log(t.results),t.update()},t.route=function(e){r.control.trigger("riot-route-dispatch","my-component-page/typicode-user-detail?id="+e.item.id)}})},function(e,t,o){"use strict";var r=o(0);r.tag2("mpc-typicode-user-detail",'<div if="{result != null}" class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">{result.name}</h3> </div> <div class="panel-body"> <form class="form-horizontal"> <fieldset> <legend>User Details</legend> <div class="form-group"> <label class="col-sm-2 control-label">Name</label> <div class="col-sm-10"> <p class="form-control-static">{result.name}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Email</label> <div class="col-sm-10"> <p class="form-control-static">{result.email}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Phone</label> <div class="col-sm-10"> <p class="form-control-static">{result.phone}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">User Name</label> <div class="col-sm-10"> <p class="form-control-static">{result.username}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Web Site</label> <div class="col-sm-10"> <p class="form-control-static">{result.website}</p> </div> </div> </fieldset> </form> <form class="form-horizontal"> <fieldset> <legend>Address</legend> <div class="form-group"> <label class="col-sm-2 control-label">Suite</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.suite}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Street</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.street}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">City</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.city}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Zip Code</label> <div class="col-sm-10"> <p class="form-control-static">{result.address.zipcode}</p> </div> </div> </fieldset> </form> <form class="form-horizontal"> <fieldset> <legend>Company</legend> <div class="form-group"> <label class="col-sm-2 control-label">Name</label> <div class="col-sm-10"> <p class="form-control-static">{result.company.name}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Catch Phrase</label> <div class="col-sm-10"> <p class="form-control-static">{result.company.catchPhrase}</p> </div> </div> <div class="form-group"> <label class="col-sm-2 control-label">Business Statement</label> <div class="col-sm-10"> <p class="form-control-static">{result.company.bs}</p> </div> </div> </fieldset> </form> </div> </div>',"","",function(e){var t=this;t.result=null,t.onUserChanged=function(e){t.result=e,console.log(t.result),t.update()},t.on("mount",function(){var e=r.route.query();console.log("on mount: typicode-user-detail",e),r.control.on(r.EVT.typicodeUserStore.out.typicodeUserChanged,t.onUserChanged),r.control.trigger(r.EVT.typicodeUserStore.in.typicodeUserFetch,{id:e.id})}),t.on("unmount",function(){console.log("on unmount:"),r.control.off(r.EVT.typicodeUserStore.out.typicodeUserChanged,t.onUserChanged)})})},function(e,t){},function(e,t,o){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}o(6);var r=o(2),i=_interopRequireDefault(r),s=o(1),l=_interopRequireDefault(s);o(4),o(5),o(3);var c={name:"typicode-component",stores:[{store:new i.default},{store:new l.default}],postLoadEvents:[{event:"typicode-init",data:{}}],preUnloadEvents:[{event:"typicode-uninit",data:{}}]};riot.control.trigger("plugin-registration",c),riot.control.trigger("component-load-complete",c.name)}]);